spring:
  application:
    name: order-service
  cloud:
    nacos:
      discovery:
        server-addr: 106.75.96.225:7001
        username: nacos
        password: nacos
#    sentinel:
#      transport:
#        dashboard: localhost:8080
#      datasource:
#        ds1:
#          nacos:
#            server-addr: 117.50.37.203:7001
#            dataId: ${spring.application.name}
#            groupId: DEFAULT_GROUP
#            data-type: json
#            rule-type: flow


# sentinel持久化时，nacos里配置管理-》配置列表追加对应的配置
#  [
#  {
#    "resource":"/order/payOrder",  #资源名
#    "limitApp":"default",          #应用ID
#    "grade":1,                     #阈值类型：0：线程，1：QPS
#    "count":1,                     #单机阈值
#    "strategy":0,                  #流控模式 0：直接失败，1：关联，2：链路
#    "controlBehavior":0,           #流控效果 0：快速失败 1：warm up（预热模式） 2：排队等待
#    "clusterMode":false            #是否集群
#  }
#  ]

feign:
  client:
    config:
      default:
        #        connectTimeout: 3000
        #        readTimeout: 8000
        loggerLevel: FULL
  hystrix:                          #Feign开启熔断
    enabled: true

#设置超时熔断时间（spring-cloud-starter-openfeign中的HystrixCommandProperties默认为1000毫秒）
#feign开始熔断的情况下，超时机制使用的是hystrix的超时设置
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 10000

# 打开监控管理
management:
  endpoints:
    web:
      exposure:
        include: '*'

# 调用库存服务URL
serviceurl:
  stockservice: http://stock-service/stock

# 对调用请求配置负载均衡策略
#stock-service:
#  ribbon:
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule

logging:
  level:
    cn:
      yan:
        cloud:
          orderfeign:
            openfeign: DEBUG